#!/bin/bash -l



#$ -S /bin/bash
#$ -l h_rt=12:0:0 
#$ -l mem=20G
#$ -pe smp 1
#$ -N RICHARD
#$ -wd /home/regmond/Scratch/richard_CLAPAnalysis/2_bam_to_bw


## qsub -t 1-35 1_bam_to_bigwig.qsub



module load deeptools/3.0.2 
module load samtools


number=$SGE_TASK_ID
paramfile="/home/regmond/Scratch/richard_CLAPAnalysis/2_bam_to_bw/samples.txt"


sample=`sed -n ${number}p $paramfile | awk '{print $1}'`


#------------------------
#- HUMAN
#------------------------
#- get the human bam (only canonical chrs, no repeats either)
chrs_hs=$(echo $(seq 1 22 | sed 's/$/_human/' | sed 's/^/chr/') chrX_human chrY_human)
samtools view -h CLAPAnalysis_output2/${sample}.merged.mapped.bam \
	$chrs_hs \
	> CLAPAnalysis_output2/${sample}.merged.mapped.hs.sam

#- this still includes all the weird chrs in the header, so delete these
perl -p -i -e 's/^.*human\:.*\n$//g' CLAPAnalysis_output2/${sample}.merged.mapped.hs.sam
perl -p -i -e 's/^.*mouse.*\n$//g' CLAPAnalysis_output2/${sample}.merged.mapped.hs.sam
perl -p -i -e 's/^.*chr[A-Za-z].*\n$//g' CLAPAnalysis_output2/${sample}.merged.mapped.hs.sam
perl -p -i -e 's/^.*random.*\n$//g' CLAPAnalysis_output2/${sample}.merged.mapped.hs.sam
perl -p -i -e 's/^.*v1_human.*\n$//g' CLAPAnalysis_output2/${sample}.merged.mapped.hs.sam

#- remove the trailing "_human"
perl -p -i -e 's/_human//g' CLAPAnalysis_output2/${sample}.merged.mapped.hs.sam

#- convert to bam
samtools view -b CLAPAnalysis_output2/${sample}.merged.mapped.hs.sam > CLAPAnalysis_output2/${sample}.merged.mapped.hs.bam
rm -rf CLAPAnalysis_output2/${sample}.merged.mapped.hs.sam

#- index
samtools index CLAPAnalysis_output2/${sample}.merged.mapped.hs.bam

for strand in all forward reverse; do
    if [ "$strand" == "all" ]; then
		bamCoverage --bam CLAPAnalysis_output2/${sample}.merged.mapped.hs.bam \
			-o CLAPAnalysis_output2/${sample}.merged.mapped.hs.${strand}.bw \
			--binSize 10 \
			--normalizeUsing RPKM \
			--effectiveGenomeSize 2805636231 \
			--ignoreForNormalization chrX chrY \
			--extendReads
	else
		bamCoverage --bam CLAPAnalysis_output2/${sample}.merged.mapped.hs.bam \
			-o CLAPAnalysis_output2/${sample}.merged.mapped.hs.${strand}.bw \
			--binSize 10 \
			--normalizeUsing RPKM \
			--effectiveGenomeSize 2805636231 \
			--ignoreForNormalization chrX chrY \
			--extendReads \
			--filterRNAstrand ${strand}
	fi
done


#------------------------
#- MOUSE
#------------------------
#- get the mouse bam (only canonical, no repeats either)
chrs_mm=$(echo $(seq 1 19 | sed 's/$/_mouse/' | sed 's/^/chr/') chrX_mouse chrY_mouse)
samtools view -h CLAPAnalysis_output2/${sample}.merged.mapped.bam \
	$chrs_mm \
	> CLAPAnalysis_output2/${sample}.merged.mapped.mm.sam

#- this still includes all the weird chrs in the header, so delete these
perl -p -i -e 's/^.*mouse\:.*\n$//g' CLAPAnalysis_output2/${sample}.merged.mapped.mm.sam
perl -p -i -e 's/^.*human.*\n$//g' CLAPAnalysis_output2/${sample}.merged.mapped.mm.sam
perl -p -i -e 's/^.*chr[A-Za-z].*\n$//g' CLAPAnalysis_output2/${sample}.merged.mapped.mm.sam

#- remove the trailing "_mouse"
perl -p -i -e 's/_mouse//g' CLAPAnalysis_output2/${sample}.merged.mapped.mm.sam

#- convert to bam
samtools view -b CLAPAnalysis_output2/${sample}.merged.mapped.mm.sam > CLAPAnalysis_output2/${sample}.merged.mapped.mm.bam
rm -rf CLAPAnalysis_output2/${sample}.merged.mapped.mm.sam

#- index
samtools index CLAPAnalysis_output2/${sample}.merged.mapped.mm.bam

for strand in all forward reverse; do
    if [ "$strand" == "all" ]; then
		bamCoverage --bam CLAPAnalysis_output2/${sample}.merged.mapped.mm.bam \
			-o CLAPAnalysis_output2/${sample}.merged.mapped.mm.${strand}.bw \
			--binSize 10 \
			--normalizeUsing RPKM \
			--effectiveGenomeSize 2467481008 \
			--ignoreForNormalization chrX chrY \
			--extendReads 
	else
		bamCoverage --bam CLAPAnalysis_output2/${sample}.merged.mapped.mm.bam  \
			-o CLAPAnalysis_output2/${sample}.merged.mapped.mm.${strand}.bw \
			--binSize 10 \
			--normalizeUsing RPKM \
			--effectiveGenomeSize 2467481008 \
			--ignoreForNormalization chrX chrY \
			--extendReads \
			--filterRNAstrand ${strand}
	fi
done


